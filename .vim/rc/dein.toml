# 基本は github.com のレポジトリーを指定するだけ
[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/neosnippet.vim'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/neocomplete.vim'
hook_add = '''
let g:neocomplete#enable_at_startup = 1
let g:neocomplete#max_list = 50
let g:neocomplete#max_keyword_width = 80
let g:neocomplete#enable_ignore_case = 1
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"
inoremap <expr><CR>  pumvisible() ? neocomplete#close_popup() : "<CR>"
if !exists('g:neocomplete#sources#omni#input_patterns')
    let g:neocomplete#sources#omni#input_patterns = {}
endif
let g:neocomplete#sources#omni#input_patterns.tex =
    \ g:vimtex#re#neocomplete
let g:vimtex_compiler_latexmk = {'callback' : 0}
'''

[[plugins]]
repo = 'vim-scripts/vim-auto-save'
hook_add = '''
let g:auto_save = 1
let g:auto_save_in_insert_mode = 0
let g:auto_save_silent = 1
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
let g:lightline = {}
let g:lightline.colorscheme = 'solarized'
set laststatus=2
'''

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'Yggdroot/indentLine'

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = 'set updatetime=50'

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'
hook_add = 'autocmd BufWritePre * :FixWhitespace'   #ファイル保存時に余分なスペースを削除する

[[plugins]]
repo = 'KeitaNakamura/railscasts.vim'

[[plugins]]
repo = 'altercation/vim-colors-solarized'

[[plugins]]
repo = 'Shougo/unite.vim'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = 'let g:quickrun_config={}'

[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_add = '''
map <Leader> <Plug>(easymotion-prefix)
let g:EasyMotion_do_mapping = 0
nmap f <Plug>(easymotion-overwin-f2)
let g:EasyMotion_smartcase = 1
map <Leader>j <Plug>(easymotion-j)
map <Leader>k <Plug>(easymotion-k)
'''

[[plugins]]
repo = 'ujihisa/neco-look'

[[plugins]]
repo = 'lervag/vimtex'

[[plugins]]
repo = 'justmao945/vim-clang'

[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
    if has('win32')
        let cmd = 'tools\\update-dll-mingw'
    elseif has('win32unix') " for Cygwin
        let cmd = 'make -f make_cygwin.mak'
    elseif executable('gmake')
        let cmd = 'gmake'
    else
        let cmd = 'make'
    endif
    let g:dein#plugin.build = cmd
'''

[[plugins]]
repo = 'twitvim/twitvim'

[[plugins]]
repo = 'iamcco/markdown-preview.vim'

[[plugins]]
repo = 'tpope/vim-markdown'

[[plugins]]
repo = 'Shougo/vimshell'

## git clone 後、実行すべきコマンドがある場合はこんな感じ
#[[plugins]]
#repo = 'Shougo/vimproc.vim'
#hook_post_update = '''
#  if dein#util#_is_windows()
#    let cmd = 'tools\\update-dll-mingw'
#  elseif dein#util#_is_cygwin()
#    let cmd = 'make -f make_cygwin.mak'
#  elseif executable('gmake')
#    let cmd = 'gmake'
#  else
#    let cmd = 'make'
#  endif
#  let g:dein#plugin.build = cmd
#'''

## ブランチやタグを指定したいとき
#[[plugins]]
#repo = 'delphinus35/typescript-vim'
#rev  = 'colorize-template-strings'
#
## 特定の条件で読み込みたいとき
#[[plugins]]
#repo = 'elzr/vim-json'
#if   = '''! has('kaoriya')'''
#
## 依存関係を指定したいとき
#[[plugins]]
#repo    = 'vim-airline/vim-airline'
#depends = ['vim-airline-themes']
#
## 依存関係を指定したからと言って、自動でインストールはされない（ここは NeoBundle と違う）
#[[plugins]]
#repo = 'vim-airline/vim-airline-themes'
