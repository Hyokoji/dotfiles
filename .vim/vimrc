"Start dein Scripts-------------------------
if !&compatible
  set nocompatible
endif

" リーダーキーのマッピング
let mapleader = "\,"

" reset augroup
augroup MyAutoCmd
  autocmd!
augroup END

" dein settings {{{
" dein自体の自動インストール
let s:cache_home = empty($XDG_CACHE_HOME) ? expand('~/.cache') : $XDG_CACHE_HOME
let s:dein_dir = s:cache_home . '/dein'
let s:dein_repo_dir = s:dein_dir . '/repos/github.com/Shougo/dein.vim'
if !isdirectory(s:dein_repo_dir)
  call system('git clone https://github.com/Shougo/dein.vim ' . shellescape(s:dein_repo_dir))
endif
let &runtimepath = s:dein_repo_dir .",". &runtimepath
" プラグイン読み込み＆キャッシュ作成
let s:toml_file = fnamemodify(expand('<sfile>'), ':h').'/rc/dein.toml'
let s:lazy_toml = fnamemodify(expand('<sfile>'), ':h').'/rc/dein_lazy.toml'
if dein#load_state(s:dein_dir)
"  if !has('nvim')
"    call dein#add('roxma/nvim-yarp')
"    call dein#add('roxma/vim-hug-neovim-rpc')
"  endif
  call dein#begin(s:dein_dir)
  call dein#load_toml(s:toml_file, {'lazy': 0})
  call dein#load_toml(s:lazy_toml, {'lazy': 1})
  call dein#end()
  call dein#save_state()
endif
" 不足プラグインの自動インストール
if has('vim_starting') && dein#check_install()
  call dein#install()
endif
" }}}


"End dein Scripts-------------------------

"Python3 support
let g:python_host_prog  = expand('/usr/local/bin/python')
let g:python3_host_prog = expand('/usr/local/bin/python3')
let g:ruby_host_prog = expand('/usr/local/lib/ruby/gems/2.6.0/gems/neovim-0.8.1/exe/neovim-ruby-host')

runtime! autoload/init/*.vim

if filereadable(expand('~/secret/evervim.vim'))
  source ~/secret/evervim.vim
endif
if filereadable(expand('~/secret/slack.vim'))
  source ~/secret/slack.vim
endif
